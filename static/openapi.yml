openapi: 3.0.0
info:
  title: Web Gallery API
  version: 1.0.0
  description: REST API for images and comments in the Web Gallery application.

servers:
  - url: http://localhost:3000

paths:
  /api/images:
    post:
      summary: Add a new image
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                author:
                  type: string
                picture:
                  type: string
                  format: binary
              required:
                - title
                - author
                - picture
      responses:
        "200":
          description: Image created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Image"
        "400":
          description: Invalid input

    get:
      summary: Get images with pagination
      parameters:
        - in: query
          name: cursor
          schema:
            type: integer
          required: false
        - in: query
          name: direction
          schema:
            type: string
            enum: [asc, desc]
          required: false
        - in: query
          name: limit
          schema:
            type: integer
          required: false
      responses:
        "200":
          description: List of images
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Image"

  /api/images/length:
    get:
      summary: Get total number of images
      responses:
        "200":
          description: Image count
          content:
            application/json:
              schema:
                type: object
                properties:
                  length:
                    type: integer

  /api/images/{id}:
    delete:
      summary: Delete an image and its comments
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Image deleted
        "404":
          description: Image not found

  /api/images/{id}/picture:
    get:
      summary: Get image file
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Image file
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
        "404":
          description: Image not found

  /api/comments:
    post:
      summary: Add a comment to an image
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                imageId:
                  type: integer
                content:
                  type: string
                author:
                  type: string
              required:
                - imageId
                - content
                - author
      responses:
        "200":
          description: Comment created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
        "400":
          description: Invalid input

  /api/comments/{id}:
    get:
      summary: Get comments for an image (paginated)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
        - in: query
          name: cursor
          schema:
            type: integer
          required: false
        - in: query
          name: limit
          schema:
            type: integer
          required: false
      responses:
        "200":
          description: List of comments
          content:
            application/json:
              schema:
                type: object
                properties:
                  comments:
                    type: array
                    items:
                      $ref: "#/components/schemas/Comment"
                  cursor:
                    type: integer
                    nullable: true

    delete:
      summary: Delete a comment
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Comment deleted
        "404":
          description: Comment not found

components:
  schemas:
    Image:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        imageAuthor:
          type: string
        picture:
          type: object
          properties:
            fieldname:
              type: string
            originalname:
              type: string
            encoding:
              type: string
            mimetype:
              type: string
            destination:
              type: string
            filename:
              type: string
            path:
              type: string
            size:
              type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Comment:
      type: object
      properties:
        id:
          type: integer
        content:
          type: string
        commentAuthor:
          type: string
        ImageId:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
